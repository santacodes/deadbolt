name: Cross-Platform CMake Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-20.04, macos-latest, macos-14, macos-13]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Print Environment Info
      run: echo "Building on ${{ matrix.os }}"

    - name: Install dependencies (Debian/Ubuntu)
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'debian')
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libssl-dev libsecret-1-dev libglib2.0-dev

    - name: Install dependencies (Fedora)
      if: startsWith(matrix.os, 'fedora')
      run: |
        sudo dnf install -y cmake gcc-c++ make openssl-devel libsecret-devel glib2-devel

    - name: Install dependencies (Arch Linux)
      if: matrix.os == 'archlinux'
      run: |
        sudo pacman -Syu --noconfirm cmake base-devel openssl glib2 libsecret

    - name: Install dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install cmake openssl sqlite3

    - name: Fetch xsimd
      run: |
        git clone https://github.com/xtensor-stack/xsimd.git external/xsimd

    - name: Configure CMake
      run: cmake -S . -B build/ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: |
        cd build
        make -j$(nproc || sysctl -n hw.ncpu)

    - name: Test
      working-directory: build
      run: ctest -C ${{ env.BUILD_TYPE }} --output-on-failure
